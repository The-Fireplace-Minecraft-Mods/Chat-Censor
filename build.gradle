buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "Modmuss50"
            url = "http://maven.modmuss50.me/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'ModsIOUpload:ModsIOUpload:+'
    }
}

plugins {
    id "com.matthewprenger.cursegradle" version "1.4.0"
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'net.cazzar.gradle.modsio'

version = "1.1.0"
group = "the_fireplace.chatcensor"
archivesBaseName = "ChatCensor-1.12.2"

allprojects {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

minecraft {
    version = "1.12.2-14.23.5.2768"
    runDir = "run"
    replace '${version}', project.version
    mappings = "stable_39"
    makeObfSourceJar = false
	
	clientRunArgs += "--uuid=0b1ec5ad-cb2a-43b7-995d-889320eb2e5b --username=The_Fireplace"
}

dependencies {
    provided 'org.spongepowered:spongeapi:7.1.0'
}

repositories {
    jcenter()
    mavenCentral()
    // Sponge
    maven { url 'https://repo.spongepowered.org/maven' }
}

processResources
{
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

/*mixin {
    add sourceSets.main, "mixins.chatcensorsponge.refmap.json"
}*/

jar {
    manifest{
        attributes 'FMLCorePlugin': 'the_fireplace.chatcensor.forge.core.ChatCensorCore'
        attributes 'FMLCorePluginContainsFMLMod': 'true'
        //attributes 'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker'
        //attributes 'MixinConfigs': 'mixins.chatcensorsponge.json'
    }
}

/*task signJar(type: SignJar, dependsOn: reobfJar) {
	alias = project.alias
	storePass = project.storePass
	keyPass = project.keyPass
	keyStore = project.keyStore

    inputFile = jar.archivePath
    outputFile = jar.archivePath
}*/

//build.dependsOn signJar

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

artifacts {
    archives jar
    archives deobfJar
    archives sourceJar
}

curseforge {
  apiKey = project.hasProperty("curseForgeApiKey")? project.curseForgeApiKey : "empty"
  project {
    id = '340070'
    changelog = file('changelog.txt')
    releaseType = 'release'
    addGameVersion '1.12.2'
	addGameVersion 'Java 8'
    mainArtifact(jar) {
        displayName = jar.archiveName.replace(".jar", "")
    }
  }
}

modsIO {
    key = project.hasProperty("modsioApiKey")? project.modsioApiKey : "empty"
    project{
		artifact = new File(jar.destinationDir, archivesBaseName+"-"+version+".jar")
		modid = "1282"
		minecraft = "1.12.2"
		try{changelog = file('changelog.txt').text}catch(Exception ignored){changelog=""}
		tag = ""
		current = true
    }
}
